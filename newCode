const addGroupCondition = (index) => {
    // Make a copy of the state array
    let newConditions = [...conditions];
    
    // If the condition at the given index is not a group condition, convert it into a group condition
    if (newConditions[index].type !== 'groupCondition') {
        newConditions[index] = {
            type: 'groupCondition',
            conditions: [newConditions[index]],
            selectOperation: 'select'
        };
    } else {
        // Add a new group condition object to the conditions array of the existing group condition object
        newConditions[index].conditions.push({ selectCondition: 'select', requestAttribute: 'select', requestOp: 'select', requestValue: '', groupAttribute: 'select', groupOp: 'select', groupValue: '', identityAttribute: 'select', identityOp: 'select', identityValue: '', locationAttribute: 'select', locationOp: 'select', locationValue: '' });
    }

    // Set the new state array
    setConditions(newConditions);
};

const addNestedCondition = (groupIndex, nestedIndex) => {
    // Make a copy of the state array
    let newConditions = [...conditions];
    
    // If the condition at the given groupIndex is not a group condition, convert it into a group condition
    if (newConditions[groupIndex].type !== 'groupCondition') {
        newConditions[groupIndex] = {
            type: 'groupCondition',
            conditions: [newConditions[groupIndex]],
            selectOperation: 'select'
        };
    }

    // Add a new nested condition object to the conditions array of the group condition object at the given groupIndex
    newConditions[groupIndex].conditions[nestedIndex].conditions.push({
        selectCondition: 'select',
        requestAttribute: 'select',
        requestOp: 'select',
        requestValue: '',
        groupAttribute: 'select',
        groupOp: 'select',
        groupValue: '',
        identityAttribute: 'select',
        identityOp: 'select',
        identityValue: '',
        locationAttribute: 'select',
        locationOp: 'select',
        locationValue: ''
    });

    // Set the new state array
    setConditions(newConditions);
};
