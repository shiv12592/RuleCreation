I'll try to write the React.js code for the rule creation component based on the image and the prompt. Here is the code:

```jsx
import React, { useState } from 'react';
import { Container, Row, Col, Button, Select } from 'reactstrap'; // Assuming you are using reactstrap

const MyComponent = () => {
  const [allData, setAllData] = useState([]);

  // Define other state variables and handlers as per your requirements
  const [selectCondition, setSelectCondition] = useState('select');
  const [requestAttribute, setRequestAttribute] = useState('select');
  const [groupAttribute, setGroupAttribute] = useState('select');
  const [requestOp, setRequestOp] = useState('select');
  const [groupOp, setGroupOp] = useState('select');
  const [requestValue, setRequestValue] = useState('');
  const [groupValue, setGroupValue] = useState('');
  const [selectOperation, setSelectOperation] = useState('select');

  const handleSelectConditionChange = (e) => {
    setSelectCondition(e.target.value);
  };

  const handleRequestAttributeChange = (e) => {
    setRequestAttribute(e.target.value);
  };

  const handleGroupAttributeChange = (e) => {
    setGroupAttribute(e.target.value);
  };

  const handleRequestOpChange = (e) => {
    setRequestOp(e.target.value);
  };

  const handleGroupOpChange = (e) => {
    setGroupOp(e.target.value);
  };

  const handleRequestValueChange = (e) => {
    setRequestValue(e.target.value);
  };

  const handleGroupValueChange = (e) => {
    setGroupValue(e.target.value);
  };

  const handleSelectOperationChange = (e) => {
    setSelectOperation(e.target.value);
  };

  const handleAddCondition = () => {
    // Add a new condition row to the data
    const newCondition = {
      selectCondition,
      requestAttribute,
      groupAttribute,
      requestOp,
      groupOp,
      requestValue,
      groupValue,
    };
    setAllData([...allData, newCondition]);
  };

  const handleAddGroupCondition = () => {
    // Add a new group of condition row to the data
    const newGroupCondition = {
      selectOperation,
      conditions: [],
    };
    setAllData([...allData, newGroupCondition]);
  };

  const handleRemoveRow = (index) => {
    // Remove a row from the data by index
    const newData = [...allData];
    newData.splice(index, 1);
    setAllData(newData);
  };

  const handleRemoveGroup = (index) => {
    // Remove a group of condition row from the data by index
    const newData = [...allData];
    newData.splice(index, 1);
    setAllData(newData);
  };

  const handleSubmit = () => {
    console.log(JSON.stringify(allData));
  };

  return (
    <div className="col-md-12">
      <Container className="col-md-12">
        {/* Render the buttons for adding condition and group of condition */}
        <Row style={{ border: 'solid' }}>
          <label>Add Condition</label>
          <Button onClick={handleAddCondition}>Add Condition</Button>
          <label>Add Group Condition</label>
          <Button
            onClick={handleAddGroupCondition}
            style={{ backgroundColor: 'lightgray' }}
          >
            Add Group Condition
          </Button>
        </Row>

        {/* Map through your data and render rows accordingly */}
        {allData.map((row, index) => {
          if (row.selectCondition) {
            // Render a condition row
            return (
              <Row
                key={index}
                style={{ margin: '1rem', border: 'solid' }}
              >
                <Col md={3}>
                  <label style={{ margin: '1rem' }}>Source</label>
                  <Select
                    value={row.selectCondition}
                    onChange={handleSelectConditionChange}
                  >
                    <option value="select">Select</option>
                    <option value="request">Request</option>
                    <option value="group">Group</option>
                  </Select>
                </Col>
                <Col md={3}>
                  <label style={{ margin: '1rem' }}>Attribute</label>
                  <Select
                    value={row.requestAttribute}
                    onChange={handleRequestAttributeChange}
                  >
                    <option value="select">Select</option>
                    <option value="rqAtt1">rqAtt1</option>
                    <option value="rqAtt2">rqAtt2</option>
                  </Select>
                </Col>
                <Col md={3}>
                  <label style={{ margin: '1rem' }}>Request Op</label>
                  <Select
                    value={row.requestOp}
                    onChange={handleRequestOpChange}
                  >
                    <option value="select">Select</option>
                    <option value="equal">Equal</option>
                    <option value="noEqual">No Equal</option>
                  </Select>
                </Col>
                <Col md={3}>
                  <label style={{ margin: '1rem' }}>Request Value</label>
                  <input
                    type="text"
                    value={row.requestValue}
                    onChange={handleRequestValueChange}
                    placeholder="req Value"
                  />
                </Col>
                <Button
                  onClick={() => handleRemoveRow(index)}
                  style={{
                    color: 'red',
                    backgroundColor: 'lightgray',
                    margin: '1rem',
                  }}
                >
                  Remove Row
                </Button>
              </Row>
            );
          } else if (row.selectOperation) {
            // Render a group of condition row
            return (
              <Row
                key={index}
                style={{ margin: '1rem', border: 'dashed' }}
              >
                <label>Select Operation</label>
                <Select
                  value={row.selectOperation}
                  onChange={handleSelectOperationChange}
                >
                  <option value="select">Select</option>
                  <option value="and">AND</option>
                  <option value="or">OR</option>
                </Select>
                {/* Render the nested conditions within the group */}
                {row.conditions.map((condition, i) => {
                  // Render a condition row
                  return (
                    <Row
                      key={i}
                      style={{ margin: '1rem', border: 'solid' }}
                    >
                      <Col md={3}>
                        <label style={{ margin: '1rem' }}>Source</label>
                        <Select
                          value={condition.selectCondition}
                          onChange={handleSelectConditionChange}
                        >
                          <option value="select">Select</option>
                          <option value="request">Request</option>
                          <option value="group">Group</option>
                        </Select>
                      </Col>
                      <Col md={3}>
                        <label style={{ margin: '1rem' }}>Attribute</label>
                        <Select
                          value={condition.requestAttribute}
                          onChange={handleRequestAttributeChange}
                        >
                          <option value="select">Select</option>
                          <option value="rqAtt1">rqAtt1</option>
                          <option value="rqAtt2">rqAtt2</option>
                        </Select>
                      </Col>
                      <Col md={3}>
                        <label style={{ margin: '1rem' }}>
                          Request Op
                        </label>
                        <Select
                          value={condition.requestOp}
                          onChange={handleRequestOpChange}
                        >
                          <option value="select">Select</option>
                          <option value="equal">Equal</option>
                          <option value="noEqual">No Equal</option>
                        </Select>
                      </Col>
                      <Col md={3}>
                        <label style={{ margin: '1rem' }}>
                          Request Value
                        </label>
                        <input
                          type="text"
                          value={condition.requestValue}
                          onChange={handleRequestValueChange}
                          placeholder="req Value"
                        />
                      </Col>
                      <Button
                        onClick={() => handleRemoveRow(i)}
                        style={{
                          color: 'red',
                          backgroundColor: 'lightgray',
                          margin: '1rem',
                        }}
                      >
                        Remove Row
                      </Button>
                    </Row>
                  );
                })}
                <Button
                  onClick={() => handleRemoveGroup(index)}
                  style={{
                    color: 'red',
                    backgroundColor: 'lightgray',
                    margin: '1rem',
                  }}
                >
                  Remove Group
                </Button>
              </Row>
            );
          }
        })}

        <Button onClick={handleSubmit}>Submit</Button>
      </Container>
    </div>
  );
};

export default MyComponent;
