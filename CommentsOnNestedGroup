// ... (existing code)

const MyComponent = () => {
    // ... (existing code)

    // Define the handler for adding a nested group condition
    const addNestedGroupCondition = (index) => {
        // Make a copy of the state array
        let newConditions = [...conditions];
        // Add a new nested group condition object to the conditions array of the group condition object at the given index
        newConditions[index].conditions.push({
            type: 'groupCondition',
            conditions: [{
                selectCondition: 'select',
                requestAttribute: 'select',
                requestOp: 'select',
                requestValue: '',
                groupAttribute: 'select',
                groupOp: 'select',
                groupValue: '',
                identityAttribute: 'select',
                identityOp: 'select',
                identityValue: '',
                locationAttribute: 'select',
                locationOp: 'select',
                locationValue: '',
            }],
            selectOperation: 'select',
        });
        // Set the new state array
        setConditions(newConditions);
    };

    // ... (existing code)

    return (
        <div>
            {/* ... (existing code) */}
            {conditions.map((condition, index) => (
                condition.type === "condition" ? 
                <div key={index}>
                    {/* ... (existing code) */}
                </div> :
                // Handle group condition rendering here
                <div key={index}>
                    {index > 0 && <div>Select Operation : <select value={condition.selectOperation} onChange={(e) => handleChange(index, 'selectOperation', e.target.value)}>
                        {selectOperationOptions.map(option => <option key={option} value={option}>{option}</option>)}
                    </select></div>}
                    <button onClick={() => addNestedCondition(index)}>Add Condition</button>
                    <button onClick={() => addNestedGroupCondition(index)}>Add Group Condition</button>
                    {/* ... (existing code) */}
                </div>
            ))}
            {/* ... (existing code) */}
        </div>
    );
};




